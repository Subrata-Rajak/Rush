import 'package:flutter/widgets.dart';
import 'package:flutter_test/flutter_test.dart';
import 'package:rush/rush.dart';

void main() {
  group('Rush', () {
    test('can be instantiated', () {
      expect(Rush, isNotNull);
    });

    test('has correct pixel values', () {
      expect(Rush.dp0, equals(0));
      expect(Rush.dp1, equals(1));
      expect(Rush.dp2, equals(2));
      expect(Rush.dp3, equals(3));
      expect(Rush.dp4, equals(4));
      expect(Rush.dp5, equals(5));
      expect(Rush.dp6, equals(6));
      expect(Rush.dp8, equals(8));
      expect(Rush.dp10, equals(10));
      expect(Rush.dp12, equals(12));
      expect(Rush.dp14, equals(14));
      expect(Rush.dp16, equals(16));
      expect(Rush.dp20, equals(20));
      expect(Rush.dp24, equals(24));
      expect(Rush.dp32, equals(32));
      expect(Rush.dp40, equals(40));
      expect(Rush.dp48, equals(48));
      expect(Rush.dp56, equals(56));
      expect(Rush.dp64, equals(64));
    });

    test('has correct color values', () {
      expect(Rush.black, equals(const Color(0xFF000000)));
      expect(Rush.white, equals(const Color(0xFFFFFFFF)));
      expect(Rush.blackHex, equals('#000000'));
      expect(Rush.whiteHex, equals('#ffffff'));

      expect(Rush.grayHex50, equals('#f9fafb'));
      expect(Rush.grayHex100, equals('#f3f4f6'));
      expect(Rush.grayHex200, equals('#e5e7eb'));
      expect(Rush.grayHex300, equals('#d1d5db'));
      expect(Rush.grayHex400, equals('#9ca3af'));
      expect(Rush.grayHex500, equals('#6b7280'));
      expect(Rush.grayHex600, equals('#4b5563'));
      expect(Rush.grayHex700, equals('#374151'));
      expect(Rush.grayHex800, equals('#1f2937'));
      expect(Rush.grayHex900, equals('#111827'));
      expect(Rush.gray50, equals(const Color(0xFFf9fafb)));
      expect(Rush.gray100, equals(const Color(0xFFf3f4f6)));
      expect(Rush.gray200, equals(const Color(0xFFe5e7eb)));
      expect(Rush.gray300, equals(const Color(0xFFd1d5db)));
      expect(Rush.gray400, equals(const Color(0xFF9ca3af)));
      expect(Rush.gray500, equals(const Color(0xFF6b7280)));
      expect(Rush.gray600, equals(const Color(0xFF4b5563)));
      expect(Rush.gray700, equals(const Color(0xFF374151)));
      expect(Rush.gray800, equals(const Color(0xFF1f2937)));
      expect(Rush.gray900, equals(const Color(0xFF111827)));
      expect(Rush.slateHex50, equals('#f8fafc'));
      expect(Rush.slateHex100, equals('#f1f5f9'));
      expect(Rush.slateHex200, equals('#e2e8f0'));
      expect(Rush.slateHex300, equals('#cbd5e1'));
      expect(Rush.slateHex400, equals('#94a3b8'));
      expect(Rush.slateHex500, equals('#64748b'));
      expect(Rush.slateHex600, equals('#475569'));
      expect(Rush.slateHex700, equals('#334155'));
      expect(Rush.slateHex800, equals('#1e293b'));
      expect(Rush.slateHex900, equals('#0f172a'));
      expect(Rush.slate50, equals(const Color(0xFFf8fafc)));
      expect(Rush.slate100, equals(const Color(0xFFf1f5f9)));
      expect(Rush.slate200, equals(const Color(0xFFe2e8f0)));
      expect(Rush.slate300, equals(const Color(0xFFcbd5e1)));
      expect(Rush.slate400, equals(const Color(0xFF94a3b8)));
      expect(Rush.slate500, equals(const Color(0xFF64748b)));
      expect(Rush.slate600, equals(const Color(0xFF475569)));
      expect(Rush.slate700, equals(const Color(0xFF334155)));
      expect(Rush.slate800, equals(const Color(0xFF1e293b)));
      expect(Rush.slate900, equals(const Color(0xFF0f172a)));
      expect(Rush.zincHex50, equals('#fafafa'));
      expect(Rush.zincHex100, equals('#f4f4f5'));
      expect(Rush.zincHex200, equals('#e4e4e7'));
      expect(Rush.zincHex300, equals('#d4d4d8'));
      expect(Rush.zincHex400, equals('#a1a1aa'));
      expect(Rush.zincHex500, equals('#71717a'));
      expect(Rush.zincHex600, equals('#52525b'));
      expect(Rush.zincHex700, equals('#3f3f46'));
      expect(Rush.zincHex800, equals('#27272a'));
      expect(Rush.zincHex900, equals('#18181b'));
      expect(Rush.zinc50, equals(const Color(0xFFfafafa)));
      expect(Rush.zinc100, equals(const Color(0xFFf4f4f5)));
      expect(Rush.zinc200, equals(const Color(0xFFe4e4e7)));
      expect(Rush.zinc300, equals(const Color(0xFFd4d4d8)));
      expect(Rush.zinc400, equals(const Color(0xFFa1a1aa)));
      expect(Rush.zinc500, equals(const Color(0xFF71717a)));
      expect(Rush.zinc600, equals(const Color(0xFF52525b)));
      expect(Rush.zinc700, equals(const Color(0xFF3f3f46)));
      expect(Rush.zinc800, equals(const Color(0xFF27272a)));
      expect(Rush.zinc900, equals(const Color(0xFF18181b)));
      expect(Rush.stoneHex50, equals('#FAFAF9'));
      expect(Rush.stoneHex100, equals('#F5F5F4'));
      expect(Rush.stoneHex200, equals('#E7E5E4'));
      expect(Rush.stoneHex300, equals('#D6D3D1'));
      expect(Rush.stoneHex400, equals('#A8A29E'));
      expect(Rush.stoneHex500, equals('#78716C'));
      expect(Rush.stoneHex600, equals('#57534E'));
      expect(Rush.stoneHex700, equals('#44403C'));
      expect(Rush.stoneHex800, equals('#292524'));
      expect(Rush.stoneHex900, equals('#1C1917'));
      expect(Rush.stone50, equals(const Color(0xFFFAFAF9)));
      expect(Rush.stone100, equals(const Color(0xFFF5F5F4)));
      expect(Rush.stone200, equals(const Color(0xFFE7E5E4)));
      expect(Rush.stone300, equals(const Color(0xFFD6D3D1)));
      expect(Rush.stone400, equals(const Color(0xFFA8A29E)));
      expect(Rush.stone500, equals(const Color(0xFF78716C)));
      expect(Rush.stone600, equals(const Color(0xFF57534E)));
      expect(Rush.stone700, equals(const Color(0xFF44403C)));
      expect(Rush.stone800, equals(const Color(0xFF292524)));
      expect(Rush.stone900, equals(const Color(0xFF1C1917)));
      expect(Rush.neutralHex50, equals('#fafafa'));
      expect(Rush.neutralHex100, equals('#f5f5f5'));
      expect(Rush.neutralHex200, equals('#e5e5e5'));
      expect(Rush.neutralHex300, equals('#d4d4d4'));
      expect(Rush.neutralHex400, equals('#a3a3a3'));
    });
  });
}
